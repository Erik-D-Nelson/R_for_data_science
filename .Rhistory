show.legend = FALSE,
width = 1
) +
theme(aspect.ratio = 1) +
labs(x = NULL, y = NULL)
bar + coord_flip()
bar + coord_polar()
bar <- ggplot(data = diamonds) +
geom_bar(
mapping = aes(x = cut, fill = cut),
show.legend = FALSE,
width = 1
) +
theme(aspect.ratio = 1) +
labs(x = NULL, y = NULL)
bar <- ggplot(data = diamonds) +
geom_bar(
mapping = aes(x = cut, fill = cut),
show.legend = FALSE,
width = 1
)
bar <- ggplot(data = diamonds) +
geom_bar(
mapping = aes(x = cut, fill = cut),
show.legend = FALSE,
width = 1
)
bar <- ggplot(data = diamonds) +
geom_bar(
mapping = aes(x = cut, fill = cut),
show.legend = FALSE,
width = 1)
bar <- ggplot(data = diamonds)
bar <- ggplot(data = diamonds) +
geom_bar(
mapping = aes(x = cut, fill = cut),
show.legend = FALSE,
width = 1
) +
theme(aspect.ratio = 1) +
labs(x = NULL, y = NULL)
bar + coord_flip()
bar + coord_polar()
bar <- ggplot(data = diamonds) +
geom_bar(
mapping = aes(x = cut, fill = cut),
show.legend = FALSE,
width = 1
) +
theme(aspect.ratio = 1) +
labs(x = NULL, y = NULL)
bar + coord_flip()
bar <- ggplot(data = diamonds) +
geom_bar(
mapping = aes(x = cut, fill = cut),
show.legend = FALSE,
width = 1
) +
theme(aspect.ratio = 1) +
labs(x = NULL, y = NULL)
geom_bar(
mapping = aes(x = cut, fill = cut),
show.legend = FALSE,
width = 1
)
ggplot(data = diamonds) +
geom_bar(
mapping = aes(x = cut, fill = cut),
show.legend = FALSE,
width = 1)
bar <- ggplot(data = diamonds) +
geom_bar(
mapping = aes(x = cut, fill = cut),
show.legend = FALSE,
width = 1
) +
theme(aspect.ratio = 1) +
labs(x = NULL, y = NULL)
bar + coord_flip()
bar + coord_polar()
bar <- ggplot(data = diamonds) +
geom_bar(
mapping = aes(x = cut, fill = cut),
show.legend = FALSE,
width = 1
) +
theme(aspect.ratio = 1) +
labs(x = NULL, y = NULL)
bar <- ggplot(data = diamonds) +
geom_bar(
mapping = aes(x = cut, fill = cut),
show.legend = FALSE,
width = 1
)
ggplot(data = diamonds) +
geom_bar(
mapping = aes(x = cut, fill = cut),
show.legend = FALSE,
width = 1)
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = clarity)) + coord_polar()
? labs()
ggplot(mtcars, aes(mpg, wt, colour = cyl)) + geom_point() + labs(colour = "Cylinders") + labs(x = "New x label")
? mtcars
p <- ggplot(mtcars, aes(mpg, wt, colour = cyl)) + geom_point()
p + labs(colour = "Cylinders")
p + labs(x = "New x label")
p <- ggplot(mtcars, aes(mpg, wt, colour = cyl)) + geom_point()
p + labs(colour = "Cylinders")
p + labs(x = "New x label") + labs(y = "weight")
p <- ggplot(mtcars, aes(mpg, wt, colour = cyl)) + geom_point()
p + labs(colour = "Cylinders")
p + labs(x = "New x label")
p <- ggplot(mtcars, aes(mpg, wt, colour = cyl)) + geom_point()
p + labs(colour = "Cylinders")
p + labs(x = "New x label")
ggplot(data = mpg, mapping = aes(x = cty, y = hwy)) +
geom_point() +
geom_abline() +
coord_fixed()
ggplot(data = mpg, mapping = aes(x = cty, y = hwy), position = "jitter") +
geom_point() +
geom_abline() +
coord_fixed()
ggplot(data = mpg, mapping = aes(x = cty, y = hwy)) +
geom_point() +
geom_abline() +
coord_fixed()
ggplot(data = mpg, mapping = aes(x = cty, y = hwy)) +
geom_point() +
geom_abline() +
coord_fixed()
ggplot(data = mpg, mapping = aes(x = cty, y = hwy), position_jitter()) +
geom_point() +
geom_abline() +
coord_fixed()
? geom_abline
ggplot(data = mpg, mapping = aes(x = cty, y = hwy)) +
geom_point() +
coord_fixed()
ggplot(data = mpg, mapping = aes(x = cty, y = hwy)) +
geom_point() +
geom_abline()
ggplot(data = mpg, mapping = aes(x = cty, y = hwy)) +
geom_point() +
geom_abline() +
coord_fixed()
ggplot(data = mpg, mapping = aes(x = cty, y = hwy)) +
+     geom_point() +
+     geom_abline()
ggplot(data = mpg, mapping = aes(x = cty, y = hwy)) +
+     geom_point() +
+     geom_abline()
ggplot(data = mpg, mapping = aes(x = cty, y = hwy)) +
+     geom_point() +
+     geom_abline()
ggplot(data = mpg, mapping = aes(x = cty, y = hwy)) +
geom_point()
+     geom_abline()
ggplot(data = mpg, mapping = aes(x = cty, y = hwy)) +   geom_point() +   geom_abline()
? coord_fixed
ggplot(data = mpg, mapping = aes(x = cty, y = hwy)) +
geom_point() +
geom_abline() +
coord_fixed()
? geom_point
? geom_boxplot
ggplot(data = <DATA>) +
<GEOM_FUNCTION>(
mapping = aes(<MAPPINGS>),
stat = <STAT>,
position = <POSITION>
) +
<COORDINATE_FUNCTION> +
<FACET_FUNCTION>
bar <- ggplot(data = diamonds) +
geom_bar(
mapping = aes(x = cut, fill = cut),
show.legend = FALSE,
width = 1
) +
theme(aspect.ratio = 1) +
labs(x = NULL, y = NULL)
bar + coord_flip()
bar + coord_polar()
bar <- ggplot(data = diamonds) +
geom_bar(
mapping = aes(x = cut, fill = cut),
show.legend = FALSE,
width = 1
) +
theme(aspect.ratio = 2) +
labs(x = NULL, y = NULL)
bar + coord_flip()
bar + coord_polar()
bar <- ggplot(data = diamonds) +
geom_bar(
mapping = aes(x = cut, fill = cut),
show.legend = FALSE,
width = 1
) +
theme(aspect.ratio = 1) +
labs(x = NULL, y = NULL)
bar + coord_flip()
bar + coord_polar()
bar <- ggplot(data = diamonds) +
geom_bar(
mapping = aes(x = cut, fill = cut),
show.legend = FALSE,
width = 2
) +
theme(aspect.ratio = 1) +
labs(x = NULL, y = NULL)
bar + coord_flip()
bar + coord_polar()
bar <- ggplot(data = diamonds) +
geom_bar(
mapping = aes(x = cut, fill = cut),
show.legend = FALSE,
width = 1
) +
theme(aspect.ratio = 1) +
labs(x = NULL, y = NULL)
bar + coord_flip()
bar + coord_polar()
this_is_a_really_long_name <- 2.5
this_is_a_really_long_name <- 3.5
seq(1, 10)
#>  [1]  1  2  3  4  5  6  7  8  9 10
seq(1, 10)
print("hello world")
print(hello world)
print("hello world")
x <- "hello world"
print x
x
10 <- my_variable
my_variable <- 10
library(tidyverse)
library(tidyverse)
library(tidyverse))
library(tidyverse)
library(nycflights13)
library(tidyverse)
install.packages("nycflights13")
install.packages("rtools")
install.packages("Rtools")
library(rtools)
library(nycflights13)
install.Rtools
install(Rtools)
install.packages("devtools")
install.packages("Rtools")
library(devtools)
library("devtools")
find_rtools()
library(dplyr)
flights
jan1 <- filter(flights, month == 1, day == 1)
jan1
filter(flights, month == 1, day == 1)
this_is_a_really_long_name
filter(flights, month == 1, day == 1)
is.na(y)
is.na(x)
is.na(this_is_a_really_long_name)
df
? df
flights
df <- tibble(x = c(1, NA, 3))
filter(df, x > 1)
#> # A tibble: 1 x 1
#>       x
#>   <dbl>
#> 1     3
filter(df, is.na(x) | x > 1)
#> # A tibble: 2 x 1
#>       x
#>   <dbl>
#> 1    NA
#> 2     3
flights
filter(flights, arr_delay >= 2)
flights
filter(flights, dest IAH | HOU)
filter(flights, dest == IAH | HOU)
filter(flights, dest == "IAH" | "HOU")
filter(flights, dest == IAH | dest == HOU)
filter(flights, dest == "IAH" | dest == "HOU")
filter(flights, carrier %in% c("United", "Delta","American")
)
filter(flights, carrier == "United" | carrier == "American" | carrier == "Delta")
filter(flights, month == 7 | month == 8 | month == 9)
filter(flights, month %in% c(7,8,9))
filter(flights, arr_delay >= 2 & dep_delay == 0)
filter(flights, dep_delay >= 1 & arr_delay >= (dep_delay - 0.5))
filter(flights, dep_time == between(600 , 1200))
? between()
filter(flights, dep_time %in% c(600:1200))
filter(flights, dep_time == between(600:1200))
filter(flights, dep_time == between(600:1200, 600, 1200))
? between()
filter(flights, between(dep_time, 600, 1200))
filter(flights, is.na(dep_time))
is.na(na^0)
is.na(NA^0)
? NA^0
library('recount2')
library(tidyverse)
library(devtools)
ggplot(data = diamonds2, mapping = aes(x = x, y = y)) +
geom_point(na.rm = TRUE)
library(tidyverse)
ggplot(data = diamonds2, mapping = aes(x = x, y = y)) +
geom_point(na.rm = TRUE)
diamonds2 <- diamonds %>%
mutate(y = ifelse(y < 3 | y > 20, NA, y))
ggplot(data = diamonds2, mapping = aes(x = x, y = y)) +
geom_point()
#> Warning: Removed 9 rows containing missing values (geom_point).
ggplot(data = diamonds2, mapping = aes(x = x, y = y)) +
geom_point(na.rm = TRUE)
diamonds_con
? diamonds_con
con %
? con %
? con
??con
? %
%
diamonds_con %
diamonds_con %
mutate(cut = as.numeric(cut),
color = as.numeric(color),
clarity = as.numeric(clarity))
summary(lm(price ~ carat + cut + carat*cut, data = diamonds_con))
diamonds %>%
mutate(cut = as.numeric(cut),
color = as.numeric(color),
clarity = as.numeric(clarity))
summary(lm(price ~ carat + cut + carat*cut, data = diamonds_con))
diamonds %>%
mutate(cut = as.numeric(cut),
color = as.numeric(color),
clarity = as.numeric(clarity))
summary(lm(price ~ carat + cut + carat*cut, data = diamonds))
diamonds_con
library(diamonds)
diamonds %>%
mutate(cut = as.numeric(cut),
color = as.numeric(color),
clarity = as.numeric(clarity)) %>%
select(price, everything()) %>%
cor()
diamonds_cor %
mutate(cut = as.numeric(cut),
color = as.numeric(color),
clarity = as.numeric(clarity))
summary(lm(price ~ carat + cut + carat*cut, data = diamonds_cor))
library(ggstance)
install.packages(ggstance)
library(devtools)
library(ggstance)
install.packages(ggstance)
library(lvplot)
install.packages
install.packages(lvplot)
ggplot(data = diamonds, mapping = aes(x = price, y = ..density..)) +
geom_freqpoly(mapping = aes(colour = cut), binwidth = 500)
ggplot(data = diamonds, mapping = aes(x = price, y = ..density..)) +
geom_violin(mapping = aes(colour = cut), binwidth = 500)
diamonds %>%
count(color, cut) %>%
ggplot(mapping = aes(x = color, y = cut)) +
geom_tile(mapping = aes(fill = n))
nycflights13::flights %>%
mutate(
cancelled = is.na(dep_time),
sched_hour = sched_dep_time %/% 100,
sched_min = sched_dep_time %% 100,
sched_dep_time = sched_hour + sched_min / 60
) %>%
ggplot(mapping = aes(sched_dep_time)) +
geom_density(mapping = aes(colour = cancelled))
ggplot2::data=diamonds
library(ggplot2)
data=diamonds
ggplot(data=diamonds, mapping=aes(x=price,y=density)) + geom_freqpoly(mapping=aes(colour=cut))
ggplot(data=diamonds, mapping=aes(x=price,y=..density..)) + geom_freqpoly(mapping=aes(colour=cut), binwidth=500)
nycflights13::flights %>%
mutate(
cancelled = is.na(dep_time),
sched_hour = sched_dep_time %/% 100,
sched_min = sched_dep_time %% 100,
sched_dep_time = sched_hour + sched_min / 60
) %>%
ggplot(mapping = aes(sched_dep_time)) +
geom_density(mapping = aes(colour = cancelled))
nycflights13::flights %>%
mutate(
cancelled = is.na(dep_time),
sched_hour = sched_dep_time %/% 100,
sched_min = sched_dep_time %% 100,
sched_dep_time = sched_hour + sched_min / 60
) %>%
ggplot(mapping = aes(sched_dep_time)) +
geom_density()
nycflights13::flights %>% group_by(dest, month) %>%
summarize(avg_dep_delay = mean(dep_delay, na.rm = TRUE)) %>%
ggplot() +
geom_tile(mapping = aes(x = month, y = dest, fill = avg_dep_delay))
install.packages(hexbin)
install.packages("hexbin")
install.packages("lvplot")
install_packages("recount2")
install.packages("recount2")
updateR()
install.packages("installr")
library(installr)
updateR()
install.packages("recount_brain")
ggplot(data=smaller, mapping = aes(x = cut, y = price)) + geom_freqpoly(mapping = aes(group = cut_width(cut, 0.1))
)
smaller <- diamonds %>%
filter(carat < 3) + ggplot(data=smaller, mapping = aes(x = cut, y = price)) + geom_freqpoly(mapping = aes(group = cut_width(cut, 0.1)))
smaller <- diamonds %>% filter(carat<3)
ggplot(data=smaller, mapping = aes(x = cut, y = price)) + geom_freqpoly(mapping = aes(group = cut_width(cut, 0.1)))
ggplot(data=smaller, mapping = aes(x = carat, y = price)) + geom_freqpoly(mapping = aes(group = cut_width(carat, 0.1)))
rlang::last_error()
gplot(data = smaller, mapping = aes(x = carat, y = price)) +
geom_boxplot(mapping = aes(group = cut_width(carat, 0.1)))
ggplot(data = smaller, mapping = aes(x = carat, y = price)) +
geom_boxplot(mapping = aes(group = cut_width(carat, 0.1)))
install.packages("ggstance")
ggplot(data = smaller, mapping = aes(x = carat, y = price)) +
geom_boxplot(mapping = aes(group = cut_width(carat, 0.1)))
ggplot(data = smaller, mapping = aes(x = carat, y = price)) +
geom_boxplot(mapping = aes(group = cut_width(carat, 0.1)))
ggplot(data = smaller, mapping = aes(x = carat, y = price)) +
geom_boxplot(mapping = aes(group = cut_width(carat, 0.1))) + coord_flip()
smaller <- diamonds %>%
filter(carat < 3)
ggplot(data = smaller, mapping = aes(x = carat, y = price)) +
geom_boxplot(mapping = aes(group = cut_width(carat, 0.1)))
uninstall.packages("ggstance")
ggplot(data = smaller, mapping = aes(x = carat, y = price)) +
geom_boxplot(mapping = aes(group = cut_width(carat, 0.1)))
ggplot(data = smaller, mapping = aes(x = carat, y = price)) +
geom_boxplot(mapping = aes(group = cut_number(carat, 20)))
diamonds %>% ggplot() +
geom_freqpoly(mapping = aes(x = price,
color = cut_number(carat, 10)), bins = 30)
ggplot(data = smaller, mapping = aes(x = carat, y = price)) +
geom_boxplot(mapping = aes(group = cut_number(carat, 20)))
diamonds %>% ggplot() +
geom_density(mapping = aes(x = carat,
color = cut_width(price, 5000
)
)
)
diamonds %>% ggplot() +
geom_density(mapping = aes(x = carat,
color = cut_width(price, 5000,boundary = 0)))
? BOUNDAR
? boundary
ggplot(data = diamonds) + geom_density(mapping = aes (x = carat, color=cut_width(price, 1000)))
diamonds %>% ggplot() + boxplot(mapping = aes (x = cut_number(carat, 5), y = price)
)
diamonds %>% ggplot() + boxplot(mapping = aes (x = cut_number(carat , 5), y = price))
diamonds %>% ggplot +
geom_boxplot(mapping = aes(x = cut_number(carat, 10),
y = price)) +
coord_flip()
diamonds %>% ggplot +
+     geom_boxplot(mapping = aes(x = cut_number(carat, 10),
+                                y = price)) +
+     coord_flip()
diamonds %>% ggplot() + geom_boxplot(x = cut_number(carat , 10) y = price, color = cut)
diamonds %>% ggplot() + geom_freqpoly(x = cut_number(carat , 10) y = price, color = cut)
diamonds %>% ggplot() +
geom_boxplot(mapping = aes(x = cut, y = price,
color = cut_number(carat, 5)))
diamonds %>% ggplot() +
geom_freqpoly(mapping = aes(x = cut, y = price,
color = cut_number(carat, 5)))
diamonds %>% ggplot() +
geom_density(mapping = aes(x = cut, y = price,
color = cut_number(carat, 5)))
diamonds %>% mutate(cut_group = cut_number(carat , 10))
carat_group <- cut_group
diamonds %>% mutate(carat_group = cut_number(carat , 10))
group_by(cut , carat_group)
diamonds %>% mutate(carat_group = cut_number(carat, 10)) %>%
group_by(cut, carat_group) %>% summarize(avg_price = mean(price)) %>% ggplot() %>% geom_tile(mapping = aes(x = cut, y = carat_group, fill = avg_price))
diamonds %>% mutate(carat_group = cut_number(carat, 10)) %>%  group_by(cut, carat_group) %>% summarize(avg_price = mean(price)) %>% ggplot() %>% geom_tile(mapping = aes(x = cut, y = carat_group, fill = avg_price))
diamonds %>% mutate(carat_group = cut_number(carat, 10)) %>%  group_by(cut, carat_group) %>% summarise(avg_price = mean(price)) %>% ggplot() %>% geom_tile(mapping = aes(x = cut, y = carat_group)fill = avg_price)
diamonds %>% mutate(carat_group = cut_number(carat, 10)) %>%
group_by(cut, carat_group) %>%
summarize(avg_price = mean(price)) %>%
ggplot() +
geom_tile(mapping = aes(x = cut, y = carat_group,
fill = avg_price))
ggplot(data = diamonds) +
geom_point(mapping = aes(x = x, y = y)) +
coord_cartesian(xlim = c(4, 11), ylim = c(4, 11))
ggplot(data = diamonds) +
geom_hex(mapping = aes(x = x, y = y)) +
coord_cartesian(xlim = c(4, 11), ylim = c(4, 11))
library(modelr)
f
getwd
getwd()
